# llm_evaluator/evaluators/base.py

from abc import ABC, abstractmethod

class BaseEvaluator(ABC):
    """
    Abstract Base Class for evaluating LLM outputs.
    """

    @abstractmethod
    def evaluate(self, generated_text: str, context: dict) -> dict:
        """
        Evaluate generated text based on input context.
        
        :param generated_text: Output generated by the primary LLM.
        :param context: A dictionary containing context data (e.g., retrieved documents).
        :return: A dictionary of evaluation metrics.
        """
        pass
